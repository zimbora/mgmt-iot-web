<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../../partials/head.ejs') %>
  
  <style>
    td {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 150px;
    }

    .small-btn {
      padding: 0rem 0.5rem;
      height: 1.5rem;
    }

    .small-icon {
      font-size: 0.75rem;
    }
    
    .switch {
      position: relative;
      display: inline-block;
      width: 34px; /* Reduced width */
      height: 20px; /* Reduced height */
    }

    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      transition: 0.4s;
      border-radius: 10px; /* Rounded corners */
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 14px; /* Reduced size of the toggle */
      width: 14px; /* Reduced size of the toggle */
      left: 3px;
      bottom: 3px;
      background-color: white;
      transition: 0.4s;
      border-radius: 50%; /* Rounded toggle */
    }

    input:checked + .slider {
      background-color: #2196F3;
    }

    input:focus + .slider {
      box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
      -webkit-transform: translateX(14px);
      -ms-transform: translateX(14px);
      transform: translateX(14px);
    }
  </style>
</head>
<body>

  <%- include('../../partials/scripts.ejs') %>
  <%- include('../../partials/project/navbar.ejs') %>

  <%- include('../../partials/modal/confirmation.ejs') %>
  <%- include('../../partials/modal/error.ejs') %>
  <%- include('../../partials/modal/success.ejs') %>

  <link href="./assets/css/jquery.dataTables.min.css" rel="stylesheet">
  <script src="./assets/js/jquery.dataTables.min.js"></script>
  <script src="./assets/js/fontawesome.js"></script>

  <div class="container-fluid">
    <div class="row flex-nowrap">
      <%- include('../../partials/device/sidebar.ejs') %>
      <div id="loading"></div>
      <div class="col py-3">
        <div class="content-header">
          <div class="d-flex justify-content-between align-items-center">
            <h3><%= project?.name %> - Edit device: <%= device?.name || 'Unknown' %></h3>
          </div>
        </div>

        <!-- MQTT Topics Section -->
        <div class="row mt-4">
          <div class="col-12">
            <div class="card">
              <div class="card-header">
                <h5 class="card-title">MQTT Topics</h5>
              </div>
              <div id="mqttTopicsContainer"></div>
            </div>
          </div>
        </div>

      </div>
    </div>
  </div>

  <!-- Edit Topic Modal -->
  <div class="modal fade" id="editTopicModal" tabindex="-1" aria-labelledby="editTopicModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editTopicModalLabel">Edit MQTT Topic</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editTopicForm">

            <!-- Hidden Topic ID -->
            <input type="hidden" id="topicEntryId" name="topicEntryId" placeHolder="defaultId">

            <!-- Name -->
            <div class="mb-3">
              <label for="topicName" class="form-label">Name</label>
              <input type="text" class="form-control" id="topicName" name="topicName" required>
            </div>

            <!-- Topic -->
            <div class="mb-3">
              <label for="topicPath" class="form-label">Topic</label>
              <input type="text" class="form-control" id="topicPath" name="topicPath" required>
            </div>

            <!-- Description -->
            <div class="mb-3">
              <label for="topicDescription" class="form-label">Description</label>
              <input type="text" class="form-control" id="topicDescription" name="topicDescription" placeholder="Enter description (optional)">
            </div>

            <!-- Type -->
            <div class="mb-3">
              <label for="topicType" class="form-label">Type</label>
              <select class="form-select" id="topicType" name="topicType">
                <option value="both">Both (Publish & Subscribe)</option>
                <option value="publish">Publish Only</option>
                <option value="subscribe">Subscribe Only</option>
              </select>
            </div>

            <!-- QoS -->
            <div class="mb-3">
              <label for="topicQos" class="form-label">QoS</label>
              <select class="form-select" id="topicQos" name="topicQos">
                <option value="0">0 - At most once</option>
                <option value="1">1 - At least once</option>
                <option value="2">2 - Exactly once</option>
              </select>
            </div>

            <!-- Retain -->
            <div class="mb-3">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="topicRetain" name="topicRetain">
                <label class="form-check-label" for="topicRetain">Retain</label>
              </div>
            </div>

          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="saveTopic()">Save Changes</button>
        </div>
      </div>
    </div>
  </div>

  <script type="module" src="./app.mjs"></script>
  
  <script>
    var deviceId = '<%= device?.id || "" %>';
    var projectId = '<%= project?.id || "" %>';
    var deviceTopics = [];

    $(document).ready(function () {
      // Validate that we have the required IDs
      if (!deviceId || !projectId) {
        $('#loading').html('<div class="alert alert-danger">Error: Missing device or project information.</div>');
        return;
      }
      
      loadMqttTopics();
    });

    function loadMqttTopics() {
      const contentContainer = $('#mqttTopicsContainer');
      contentContainer.empty();

      contentContainer.html(`
          <div class="mt-3 p-3">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h6>MQTT Topics for device</h6>
              <button class="btn btn-primary small-btn" onclick="newTopic()">
                <i class="fas fa-plus small-icon"></i> Add Topic
              </button>
            </div>
            <div id="loading-topics" class="text-center py-3">
              <div class="spinner-border spinner-border-sm" role="status"></div>
              <span>Loading topics...</span>
            </div>
            <div class="table-responsive">
              <table id="topics-table" class="display table" style="width: 100%;">
                <thead>
                  <tr>
                    <th style="width: 80px;">Actions</th>
                    <th style="width: 120px;">Name</th>
                    <th style="width: 200px;">Topic</th>
                    <th style="width: 100px;">Type</th>
                    <th style="width: 60px;">QoS</th>
                    <th style="width: 80px;">Retain</th>
                    <th>Description</th>
                  </tr>
                </thead>
                <tbody>
                </tbody>
              </table>
            </div>
          </div>
        `);

      api.device.getMqttTopics(deviceId, (err, topics) => {
        $('#loading-topics').hide();
        if (err) {
          console.error('Error loading MQTT topics:', err);
          $('#loading').html('<div class="alert alert-danger">Error loading MQTT topics: ' + err + '</div>');
          return;
        }

        if (!topics || topics.length === 0) {
          $('#loading').html('<div class="alert alert-info">No MQTT topics found.</div>');
          return;
        }

        deviceTopics = topics;
        const loadingEl = $(`#loading-topics`);
        const tableEl = $(`#topics-table`);
        
        loadingEl.hide();

        // Initialize DataTable
        const table = tableEl.DataTable({
          data: topics,
          columns: [
            {
              data: null,
              render: function(data, type, row) {
                const entryId = row.id;
                return `
                  <button class="btn btn-danger small-btn me-1" 
                    data-topic='${JSON.stringify(data)}' 
                    onclick="deleteTopic('${entryId}', this)">
                    <span class="icon small-icon">&times;</span>
                  </button>
                  <button class="btn btn-primary small-btn" 
                    data-topic='${JSON.stringify(data)}' 
                    onclick="editTopic('${entryId}', this)">
                    <i class="fas fa-pencil-alt small-icon"></i>
                  </button>
                  `;
              }
            },
            { data: 'name' },
            { data: 'topic' },
            { data: 'type' },
            { data: 'qos' },
            {
              data: null,
              render: function(data, type, row) {
                return row.retain ? 'Yes' : 'No';
              }
            },
            { data: 'description' },
          ],
          pageLength: 10,
          searching: true,
          ordering: true,
          order: [], // Disable initial automatic ordering
        });

        tableEl.show();
      });
    }

    function deleteTopic(entryId, element) {
      const topicData = JSON.parse(element.getAttribute('data-topic'));
      
      if(topicData?.id !== undefined){
        api.device.mqtt.deleteTopic(deviceId, entryId,(err,res)=>{
          if(!err){
            loadMqttTopics();
          }else{
            console.log(err)
            $('#error').text('Error deleting MQTT topic');
            $('#suggestion').text(typeof err === 'string' ? err : 'An unexpected error occurred');
            $('#modalError').modal('show');
            return;
          }
        })
      }
    }

    function newTopic() {
      openAddTopicModal();
    }

    function editTopic(entryId, element) {
      const topicData = JSON.parse(element.getAttribute('data-topic'));
      openEditTopicModal(topicData);
    }

    function openAddTopicModal() {
      // Clear form
      document.getElementById('topicEntryId').value = '';
      document.getElementById('topicName').value = '';
      document.getElementById('topicPath').value = '';
      document.getElementById('topicDescription').value = '';
      document.getElementById('topicType').value = 'both';
      document.getElementById('topicQos').value = '0';
      document.getElementById('topicRetain').checked = false;

      document.getElementById('editTopicModalLabel').textContent = 'Add MQTT Topic';

      const modal = new bootstrap.Modal(document.getElementById('editTopicModal'));
      modal.show();
    }

    function openEditTopicModal(topic) {
      document.getElementById('topicEntryId').value = topic.id;
      document.getElementById('topicName').value = topic.name;
      document.getElementById('topicPath').value = topic.topic;
      document.getElementById('topicDescription').value = topic.description || '';
      document.getElementById('topicType').value = topic.type || 'both';
      document.getElementById('topicQos').value = topic.qos || 0;
      document.getElementById('topicRetain').checked = topic.retain || false;

      document.getElementById('editTopicModalLabel').textContent = 'Edit MQTT Topic';

      const modal = new bootstrap.Modal(document.getElementById('editTopicModal'));
      modal.show();
    }

    function saveTopic() {
      const entryId = document.getElementById('topicEntryId').value;
      
      const topicData = {
        name: document.getElementById('topicName').value,
        topic: document.getElementById('topicPath').value,
        description: document.getElementById('topicDescription').value,
        type: document.getElementById('topicType').value,
        qos: parseInt(document.getElementById('topicQos').value),
        retain: document.getElementById('topicRetain').checked,
      };

      if (!topicData.name || !topicData.topic) {
        alert('Name and Topic are required fields.');
        return;
      }

      if (entryId !== "") {
        // Update existing topic
        api.device.mqtt.updateTopic(deviceId, entryId, topicData, (err, res) => {
          if (!err) {
            loadMqttTopics();
            // Close the modal
            const modalElement = document.getElementById('editTopicModal');
            const modal = bootstrap.Modal.getInstance(modalElement);
            modal.hide();
          } else {
            console.log(err);
            $('#error').text('Error updating MQTT topic');
            $('#suggestion').text(typeof err === 'string' ? err : 'An unexpected error occurred');
            $('#modalError').modal('show');
          }
        });
      } else {
        // Add new topic
        api.device.mqtt.addTopic(deviceId, topicData, (err, res) => {
          if (!err) {
            loadMqttTopics();
            // Close the modal
            const modalElement = document.getElementById('editTopicModal');
            const modal = bootstrap.Modal.getInstance(modalElement);
            modal.hide();
          } else {
            console.log(err);
            $('#error').text('Error adding MQTT topic');
            $('#suggestion').text(typeof err === 'string' ? err : 'An unexpected error occurred');
            $('#modalError').modal('show');
          }
        });
      }
    }

  </script>

</body>
</html>