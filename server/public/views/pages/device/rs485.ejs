<!DOCTYPE html>
<html lang="en">
<head>

  <%- include('../../partials/head.ejs') %>

  <style type="text/css" media="screen">

      .card {
        height: 500px;
      }
  </style>
</head>
<body>

  <%- include('../../partials/scripts.ejs') %>

  <%- include('../../partials/device/navbar.ejs') %>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>

  <div class="container-fluid">
      <div class="row flex-nowrap">
          <%- include('../../partials/device/sidebar.ejs') %>
          <div class="col py-3">
            <div class="row">
              <div class="col-sm-8 mb-3 mb-sm-0">
                <div class="content-header">
                  <h5>RS485 Master
                    <button id="mqtt_status" type="button" class="btn btn-secondary" disabled></button>
                  </h5>
                </div>
                <div class="card">
                  <!--<h5 class="card-title">Special title treatment</h5>-->

                  <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-sm">unit_id</span>
                    </div>
                    <input type="number" placeholder="0..255"  class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                  </div>

                  <div class="input-group mb-3">
                    <div class="input-group-prepend">
                      <label class="input-group-text" for="inputGroupSelect01">function code</label>
                    </div>
                    <select class="custom-select" id="inputGroupSelect01">
                      <option selected>Choose...</option>
                      <option value="3">multiple read (3)</option>
                      <option value="4">multiple read (4)</option>
                      <option value="16">multiple write (16)</option>
                    </select>
                  </div>

                  <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-sm">address</span>
                    </div>
                    <input type="number" placeholder="decimal format" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                  </div>

                  <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-sm">length</span>
                    </div>
                    <input type="number" placeholder="decimal format" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                  </div>

                  <div class="input-group input-group-sm mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-sm">data</span>
                    </div>
                    <input type="text" placeholder="hexadecimal format (0x40102AACC)" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                  </div>

                </div>
                <button id="sendScript" type="button" class="btn btn-primary">request</button>
              </div>
              <div class="col-sm-4 mb-2 mb-sm-0">
                <div class="content-header">
                  <h5>Device available
                    <button id="status" type="button" class="btn btn-secondary" disabled></button
                  </h5>
                </div>
                <div class="card">
                  <div class="card-header">
                    <p>Documentation</p>
                  </div>
                  <div class="card-body">
                  </div>
                </div>
              </div>
            </div>
          </div>
      </div>
  </div>

  <!-- check link to more import options https://cdnjs.com/libraries/ace -->
  <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.14.0/ace.min.js" integrity="sha512-s57ywpCtz+4PU992Bg1rDtr6+1z38gO2mS92agz2nqQcuMQ6IvgLWoQ2SFpImvg1rbgqBKeSEq0d9bo9NtBY0w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>-->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.14.0/ace.js" integrity="sha512-WYlXqL7GPpZL2ImDErTX0RMKy5hR17vGW5yY04p9Z+YhYFJcUUFRT31N29euNB4sLNNf/s0XQXZfzg3uKSoOdA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script>

  var deviceID = api.getDeviceID();
  var project = "";

    $(document).ready(()=>{

      api.getDeviceInfo(deviceID,(err,res)=>{
        if(err) console.log(err)
        else if(res.length > 0){
          project = res[0].project;

          api.getMqttCredentials((err,res)=>{

            // connect the client
            if(res != null && res.length > 0){

              client = new Paho.MQTT.Client(Settings.mqtt.host, Settings.mqtt.port, res[0].idclients);

              // set callback handlers
              client.onConnectionLost = onConnectionLost;
              client.onMessageArrived = onMessageArrived;

              client.connect({
                userName:res[0].idusers,
                password:res[0].password,
                onSuccess:onConnect
              });
            }
          })
        }
      })
    });

    $("#sendScript").click(()=>{
      console.log("send request");
    })

    // called when the client connects
    function onConnect() {
      // Once a connection has been made, make a subscription and send a message.
      let button = document.querySelector('#mqtt_status');
      button.classList.toggle("btn-secondary",false);
      button.classList.toggle("btn-success",true);
      client.subscribe(project+"/"+deviceID+"/status");
      client.subscribe(project+"/"+deviceID+"/rs485/#");
    }

    // called when the client loses its connection
    function onConnectionLost(responseObject) {
      button.classList.toggle("btn-secondary",false);
      button.classList.toggle("btn-danger",true);
      if (responseObject.errorCode !== 0) {
        console.log("onConnectionLost:"+responseObject.errorMessage);
      }
    }

    // called when a message arrives
    function onMessageArrived(message) {

      let topic = message.destinationName;
      let payload = message.payloadString;
      console.log(topic);
      console.log("payload:"+payload);
      if(topic.includes("status")){
        let button = document.querySelector('#status');
        button.classList.toggle("btn-secondary",false);
        if(payload == "online")
          button.classList.toggle("btn-success",true);
        else
          button.classList.toggle("btn-danger",true);
      }
    }

    function sendMessage(topic,payload){
      message = new Paho.MQTT.Message(payload);
      message.destinationName = project+"/"+deviceID+"/"+topic;
      client.send(message);
    }

  </script>
</body>
</html>
