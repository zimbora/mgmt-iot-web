<!DOCTYPE html>
<html lang="en">
<head>

  <%- include('../../partials/head.ejs') %>

</head>
<body>

  <%- include('../../partials/scripts.ejs') %>
  <%- include('../../partials/device/navbar.ejs') %>

  <%- include('../../partials/modal/confirmation.ejs') %>
  <%- include('../../partials/modal/error.ejs') %>
  <%- include('../../partials/modal/loading.ejs') %>
  <%- include('../../partials/modal/timeout.ejs') %>
  <%- include('../../partials/modal/logsChart.ejs') %>
  <%- include('../../partials/modal/logsList.ejs') %>


  <link href="./assets/css/jquery.dataTables.min.css" rel="stylesheet"></script>
  <script src="./assets/js/jquery.dataTables.min.js"></script>
  <script src="./assets/js/ace.js"></script>
  <script src="./assets/js/mqttws31.min.js" type="text/javascript"></script>
  <script type="module" src="./app.mjs"></script>

  <div class="container-fluid">
    <div class="row flex-nowrap">
      <%- include('../../partials/device/sidebar.ejs') %>
      <div class="col">

        <div class="row py-3">
          <div class="col-xs-12 col-sm-6 mb-4 mb-sm-0">
            <div class="content-header">
              <h5>MQTT Available
                <button id="mqtt_status" type="button" class="btn btn-secondary" disabled></button>
              </h5>
            </div>
            <div class="col">
              <div class="mb-1 row">
                <label for="project" class="col-4 col-form-label">Project</label>
                <div class="col-6">
                  <input type="text" readonly class="form-control-plaintext fw-bold" id="project" value="ND">
                </div>
              </div>
              <div class="mb-1 row">
                <label for="model" class="col-4 col-form-label">Model</label>
                <div class="col-6">
                  <input type="text" readonly class="form-control-plaintext fw-bold" id="model" value="ND">
                </div>
              </div>
              <div class="mb-1 row">
                <label for="fw_version" class="col-4 col-form-label">FW version</label>
                <div class="col-6">
                  <input type="text" readonly class="form-control-plaintext fw-bold" id="fw_version" value="0.0.0">
                </div>
              </div>
              <div class="mb-4 row">
                <label for="app_version" class="col-4 col-form-label">App version</label>
                <div class="col-6">
                  <input type="text" readonly class="form-control-plaintext fw-bold" id="app_version" value="0.0.0">
                </div>
              </div>
              <div class="btn-group">
                <label class="input-group-text" for="inputGroupSelect21">release</label>
                <select class="form-select fwReleaseOption" id="_fwrelease_">
                </select>
              </div>
            </div>
          </div>
          <div class="col-xs-12 col-sm-6 mb-4 mb-sm-4">
            <div class="content-header">
              <h5>
                <button class="btn btn-primary btn-sm" type="submit" onclick="Display.showDeviceLogs(`status`)">
                  <i class="bi bi-list"></i>
                </button>
                <%= device.name != null ? device.name : device.uid %>
                <button id="status" type="button" class="btn btn-secondary" disabled></button
              </h5>
            </div>
            <div class="mb-1 row">
              <label for="uptime" class="col-4 col-form-label">
                <button class="btn btn-light btn-sm" type="submit" onclick="Display.showDeviceLogs(`uptime`)">
                  <i class="bi bi-list"></i>
                </button>
                Uptime
              </label>
              <div class="col-6">
                <input type="text" readonly class="form-control-plaintext fw-bold" id="uptime" value="0">
              </div>
            </div>
            <div class="mb-1 row">
              <label for="tech" class="col-4 col-form-label">
                <button class="btn btn-light btn-sm" type="submit" onclick="Display.showDeviceLogs(`tech`)">
                  <i class="bi bi-list"></i>
                </button>
                Tech
              </label>
              <div class="col-6">
                <input type="text" readonly class="form-control-plaintext fw-bold" id="tech" value="ND">
              </div>
            </div>
            <div class="mb-3 row">
              <label for="rssi" class="col-4 col-form-label">
                <button class="btn btn-light btn-sm" type="submit" onclick="Display.showDeviceLogs(`rssi`)">
                  <i class="bi bi-list"></i>
                </button>
                RSSI
              </label>
              <div class="col-6">
                <input type="text" readonly class="form-control-plaintext fw-bold" id="rssi" value="99">
              </div>
            </div>
            <div class="btn-group">
              <label class="input-group-text" for="inputGroupSelect21">use device config:</label>
                <select class="form-select settingsDeviceRef" id="_device_ref_">
                  <% console.log(device) %>
                  <% if(device.settings_ref == null){ %>
                    <option selected value="null">own</option>
                  <%} else {%>
                    <option select value="<%= device.settings_ref %>"><%= device.settings_ref %>
                    <option value="null">own</option>
                    </option>
                  <% } %>
                  <%devices.map((row)=>{%>
                    <% if(row.id != device.device_id){ %>
                      <% if(row.id == device.settings_ref){ %>
                        <%console.log(row.id,"match")%>;
                        <option selected value="<%= row.id%>"><%= row.name != null ? row.name : row.uid%></option>
                      <% }else { %>
                        <option value="<%= row.id%>"><%= row.name != null ? row.name : row.uid%></option>
                      <% } %>
                    <% } %>
                  <%})%>
                </select>
            </div>
          </div>
        </div>


        <div class="row py-3">

          <div class="col-xs-12 col-sm-6 mb-4 mb-sm-4">
            <div class="card">
              <div class="card-header">
                <p>Settings</p>
              </div>
              <div class="card-body">
                <form class="row g-3 needs-validation" novalidate>
                  <div class="col-xs-12 col-sm-6">
                    <div class="btn-group">
                      <label class="input-group-text" for="inputGroupSelect31">keepalive</label>
                      <select <% if(device.settings_ref != null){%> disabled <%}%> class="form-select fwKeepaliveOption" id="_fwkeepalive_">
                      </select>
                      <button id="keepaliveget" class="btn btn-primary btn-sm" type="submit" onclick="return false;">
                        <i class="bi bi-search"></i>
                      </button>
                    </div>
                  </div>
                  <div class="col-xs-12 col-sm-6">
                    <div class="btn-group">
                      <label class="input-group-text" for="inputGroupSelect31">logs level</label>
                      <select <% if(device.settings_ref != null){%> disabled <%}%> class="form-select fwLogsLevelOption" id="_fwlogslevel_">
                      </select>
                      <button id="logLevelget" class="btn btn-primary btn-sm" type="submit" onclick="return false;">
                        <i class="bi bi-search"></i>
                      </button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>

          <div class="col-xs-12 col-sm-6 mb-4 mb-sm-0">
            <div class="card">
              <div class="card-header">
                <p>Actions</p>
              </div>
              <div class="card-body">
                <div class="mb-3 row">
                  <div class="col-3">
                    <button id="reboot" type="button" class="btn btn-primary btn-sm">Reboot</button>
                  </div>
                  <div class="col-3">
                  </div>
                  <div class="col-3">
                    <button id="reset" type="button" class="btn btn-warning btn-sm">Reset</button>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <% if(device.model.endsWith("WIFI")){ %>
            <div class="col-xs-12 col-sm-6 mb-4 mb-sm-4">
              <div class="card">
                <div class="card-header">
                  <p>WiFi</p>
                </div>
                <div class="card-body">
                  <form class="row g-3 needs-validation" validate>
                    <div class="col-md-6">
                      <label for="validationCustom01" class="form-label">SSID</label>
                      <input type="text" class="form-control" id="wifissid" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-6">
                      <label for="validationCustom02" class="form-label">Password</label>
                      <input type="text" class="form-control" id="wifipassword" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <button id="wifiget" class="btn btn-primary btn-sm" type="submit" onclick="return false;">get</button>
                      <button <% if(device.settings_ref != null){%> disabled <%}%> id="wifiset" class="btn btn-warning btn-sm" type="submit" onclick="return false;">set</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
            <% }else if(device.model.endsWith("LTE")){ %>
            <div class="col-xs-12 col-sm-6 mb-4 mb-sm-4">
              <div class="card">
                <div class="card-header">
                  <p>LTE</p>
                </div>
                <div class="card-body">
                  <form class="row g-3 needs-validation" validate>
                    <div class="col-md-4">
                      <label for="validationCustom11" class="form-label">APN</label>
                      <input type="text" class="form-control" id="_lte_apn_" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <label for="validationCustom12" class="form-label">User</label>
                      <input type="text" class="form-control" id="_lte_user_" value="">
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <label for="validationCustom13" class="form-label">Password</label>
                      <input type="text" class="form-control" id="_lte_pwd_" value="">
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <label for="validationCustom13" class="form-label">Cops</label>
                      <input type="number" class="form-control" id="_lte_cops_" value="">
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <label for="validationCustom13" class="form-label">Band</label>
                      <input type="number" class="form-control" id="_lte_band_" value="">
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <label for="validationCustom13" class="form-label">Tech</label>
                      <select class="form-select fwTechOption" id="_lte_tech_">
                      </select>
                    </div>
                    <div class="col-md-4">
                      <button id="lteget" class="btn btn-primary btn-sm" type="submit" onclick="return false;">get</button>
                      <button <% if(device.settings_ref != null){%> disabled <%}%> id="lteset" class="btn btn-warning btn-sm" type="submit" onclick="return false;">set</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
            <% } %>
            <div class="col-xs-12 col-sm-6 mb-4 mb-sm-4">
              <div class="card">
                <div class="card-header">
                  <p>MQTT Second Connection</p>
                </div>
                <div class="card-body">
                  <form class="row g-3 needs-validation" novalidate>
                    <div class="col-md-10">
                      <label for="validationMQTT01" class="form-label">Host</label>
                      <input type="text" class="form-control" id="mqtt_host" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-2">
                      <label for="validationMQTT02" class="form-label">Port</label>
                      <input type="number" class="form-control" id="mqtt_port" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-6">
                      <label for="validationMQTT03" class="form-label">User</label>
                      <input type="text" class="form-control" id="mqtt_user" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-6">
                      <label for="validationMQTT04" class="form-label">Password</label>
                      <input type="text" class="form-control" id="mqtt_pwd" value="" required>
                      <div class="valid-feedback">
                        Looks good!
                      </div>
                    </div>
                    <div class="col-md-4">
                      <button id="mqttget" class="btn btn-primary btn-sm" type="submit" onclick="return false;">get</button>
                      <button <% if(device.settings_ref != null){%> disabled <%}%> id="mqttset" class="btn btn-warning btn-sm" type="submit" onclick="return false;">set</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>
        </div>
      </div>
      </div>
  </div>

  <script>

    var deviceID = api.getDeviceID();
    var project = "";
    var uid = "";
    var action = "";
    var data = {}
    var loading = $('#modalLoading');
    var keepalive_arr = [
      {value:1,description:"1s"},
      {value:15,description:"15s"},
      {value:30,description:"30s"},
      {value:60,description:"60s"},
      {value:900,description:"15min"},
      {value:3600,description:"1h"},
      {value:21600,description:"6h"},
      {value:86400,description:"24h"},
    ]

    var logs_level_arr = [
      {value:0,description:"Disabled"},
      {value:1,description:"Verbose"},
      {value:2,description:"Debug"},
      {value:3,description:"Info"},
      {value:4,description:"Warn"},
      {value:5,description:"Error"}
    ]

    var lte_tech_arr = [
      {value:0,description:"ND"},
      {value:1,description:"GSM"},
      {value:2,description:"GPRS"},
      {value:3,description:"NB2"},
      {value:4,description:"CATM1"},
      {value:5,description:"AUTO"}
    ]

    var ctx;
    var table_list;
    let devices = <%- JSON.stringify(devices) %>;

    $(document).ready(()=>{

      const app = require('./app.mjs');
      table_list = $('#table_list').DataTable();
      ctx = echarts.init(document.getElementById('myChart'));

      let device = <%- JSON.stringify(device) %>;
      let mqtt = <%- JSON.stringify(mqtt) %>;

      document.querySelector('#project').value = device.project;
      document.querySelector('#model').value = device.model;
      document.querySelector('#fw_version').value = device.fw_version;
      document.querySelector('#app_version').value = device.app_version || device.version;
      project = device.project;
      uid = device.uid;

      if(device.hasOwnProperty("settings") && device.settings != null){

        if(device.settings.hasOwnProperty("wifi") && device.settings.wifi != null){
          try{
            let wifi = JSON.parse(device.settings.wifi);
            if(document.querySelector('#wifissid') != null){
              document.querySelector('#wifissid').value = wifi.ssid;
              document.querySelector('#wifipassword').value = wifi.pwd;
            }
          }catch(e){console.log(e)};
        }

        if(device.settings.hasOwnProperty("modem") && device.settings.modem != null){

          try{
            let modem = JSON.parse(device.settings.modem);
            if(document.querySelector('#_lte_apn_') != null){
              document.querySelector('#_lte_apn_').value = modem.apn;
              document.querySelector('#_lte_user_').value = modem.user;
              document.querySelector('#_lte_pwd_').value = modem.pwd;
              document.querySelector('#_lte_cops_').value = modem.cops;
              document.querySelector('#_lte_band_').value = modem.band;
              document.querySelector('#_lte_tech_').value = modem.tech;
            }
          }catch(e){console.log(e)};
        }

        if(device.settings.hasOwnProperty("mqtt") && device.settings.mqtt != null){
          try{
            let mqtt = JSON.parse(device.settings.mqtt)
            document.querySelector('#mqtt_host').value = mqtt.host;
            document.querySelector('#mqtt_port').value = mqtt.port;
            document.querySelector('#mqtt_user').value = mqtt.user;
            document.querySelector('#mqtt_pwd').value = mqtt.pass;
          }catch(err){}
        }
      }

      addSelectedOption('#_fwrelease_',device.fw_release);
      addOption('#_fwrelease_',"stable");
      addOption('#_fwrelease_',"nightmare");

      if(device.settings != null){
        if(device.settings.hasOwnProperty("keepalive")){
          let keepalive;
          try{
            keepalive = JSON.parse(device.settings.keepalive);
          }catch(e){}
          keepalive_arr.forEach((item,i)=>{
            if(item.value == keepalive?.period)
              addSelectedOption2('#_fwkeepalive_',item.value,item.description);
          });
        }
        if(device.settings.hasOwnProperty("log")){
          let log;
          try{
            log = JSON.parse(device.settings.log);
          }catch(e){}
          logs_level_arr.forEach((item,i)=>{
            if(item.value == log?.level)
              addSelectedOption2('#_fwlogslevel_',item.value,item.description);
          });
        }

        if(device.settings.hasOwnProperty("modem")){
          let modem;
          try{
            modem = JSON.parse(device.settings.modem);
          }catch(e){}
          lte_tech_arr.forEach((item,i)=>{
            if(item.value == device.fw_settings.modem?.tech)
              addSelectedOption2('#_lte_tech_',item.value,item.description);
          });
        }
      }

      keepalive_arr.forEach((item,i)=>{
        addOption2('#_fwkeepalive_',item.value,item.description);
      })

      logs_level_arr.forEach((item,i)=>{
        addOption2('#_fwlogslevel_',item.value,item.description);
      })

      lte_tech_arr.forEach((item,i)=>{
        addOption2('#_lte_tech_',item.value,item.description);
      })

      $(".fwReleaseOption").change((event)=>{
        $( ".fwReleaseOption option:selected" ).each(function() {
          let release = $( this ).text();
          release = release.trim()
          api.updateDeviceRelease(deviceID,release,(err,res)=>{
            if(err){
              $('#error').text("Your request cannot be executed");
              if(err.hasOwnProperty("sqlMessage"))
                $('#suggestion').text(err.sqlMessage);
              else
                $('#suggestion').text(err);
              $('#modalError').modal('show');
            }
          });
        });
      });

      $(".settingsDeviceRef").change((event)=>{
        $( ".settingsDeviceRef option:selected" ).each(function() {
          let dev_ref = $( this ).val();
          if(dev_ref == "null")
            dev_ref = null;
          api.updateDeviceProjectField(deviceID,"settings_ref",dev_ref,(err,res)=>{
            if(err){
              $('#error').text("Your request cannot be executed");
              if(err.hasOwnProperty("sqlMessage"))
                $('#suggestion').text(err.sqlMessage);
              else
                $('#suggestion').text(err);
              $('#modalError').modal('show');
            }else{
              location.reload();
            }
          });

        });
      });

      $(".fwKeepaliveOption").change((event)=>{
        $( ".fwKeepaliveOption option:selected" ).each(function(item) {
          let keepalive = $( this ).val();
          data = {
            period : keepalive
          }
          sendMessage("fw/settings/keepalive/set",JSON.stringify(data));
        });
      });

      $(".fwLogsLevelOption").change((event)=>{
        $( ".fwLogsLevelOption option:selected" ).each(function() {
          let level = $( this ).val();
          data = {
            level : level
          }
          sendMessage("fw/settings/log/set",JSON.stringify(data));
        });
      });


      // connect the client
      if(mqtt != null){
        if(window.location.protocol == "https:"){
          Settings.mqtt.ssl = true;
          Settings.mqtt.port = 443;
        }

        client = new Paho.MQTT.Client(Settings.mqtt.host, Settings.mqtt.port, mqtt.nick);

        // set callback handlers
        client.onConnectionLost = onConnectionLost;
        client.onMessageArrived = onMessageArrived;

        client.connect({
          userName:mqtt.type,
          password:mqtt.password,
          useSSL:Settings.mqtt.ssl,
          timeout:3,
          onSuccess:onConnect
        });
      }

    });


    $("#modalProceed").click(()=>{
      if(action == "reset"){
        sendMessage("fw/reset/set","1");
      }else if(action == "set_wifi"){
        sendMessage("fw/settings/wifi/set",JSON.stringify(data));
      }else if(action == "set_lte"){
        sendMessage("fw/settings/modem/set",JSON.stringify(data));
      }
      action = "";
    })

    $("#reboot").click(()=>{
      sendMessage("fw/reboot/set","1");
    });

    $("#reset").click(()=>{
      action = "reset"
      $('#modal_warning_message').text("If you proceed all settings configured on the device will be restored for default settings")
      $('#modalConfirmation').modal('show');
    });

    $("#wifiset").click(()=>{
      let ssid = document.querySelector('#wifissid').value;
      let pwd = document.querySelector('#wifipassword').value;
      data = {
        ssid : ssid,
        pwd : pwd
      }
      action = "set_wifi";
      $('#modal_warning_message').text("If wrong credentials were set, device can become offline after reboot")
      $('#modalConfirmation').modal('show');
    });

    $("#wifiget").click(()=>{
      sendMessage("fw/settings/wifi/get","");
    });

    $("#lteset").click(()=>{
      let apn = document.querySelector('#_lte_apn_').value;
      let user = document.querySelector('#_lte_user_').value;
      let pwd = document.querySelector('#_lte_pwd_').value;
      let cops = document.querySelector('#_lte_cops_').value;
      let band = document.querySelector('#_lte_band_').value;
      let tech = document.querySelector('#_lte_tech_').value;
      data = {
        apn : apn,
        user : user,
        pwd : pwd,
        cops : cops,
        band : band,
        tech : tech
      }
      action = "set_lte";
      $('#modal_warning_message').text("If wrong credentials were set, device can become offline after reboot")
      $('#modalConfirmation').modal('show');
    });

    $("#lteget").click(()=>{
      sendMessage("fw/settings/modem/get","");
    });

    $("#mqttset").click((event)=>{
      let host = document.querySelector('#mqtt_host').value;
      let port = document.querySelector('#mqtt_port').value;
      let user = document.querySelector('#mqtt_user').value;
      let pwd = document.querySelector('#mqtt_pwd').value;
      data = {
        host : host,
        port : port,
        user : user,
        pass : pwd,
        active : 1
      }
      sendMessage("fw/settings/mqtt/set",JSON.stringify(data));
    });

    $("#mqttget").click(()=>{
      sendMessage("fw/settings/mqtt/get","");
    });

    $("#keepaliveget").click(()=>{
      sendMessage("fw/settings/keepalive/get","");
    });

    $("#logLevelget").click(()=>{
      sendMessage("fw/settings/log/get","");
    });

    // called when the client connects
    function onConnect() {
      // Once a connection has been made, make a subscription and send a message.
      let button = document.querySelector('#mqtt_status');
      button.classList.toggle("btn-secondary",false);
      button.classList.toggle("btn-success",true);
      client.subscribe(project+"/"+uid+"/#");
    }

    // called when the client loses its connection
    function onConnectionLost(responseObject) {
      button.classList.toggle("btn-secondary",false);
      button.classList.toggle("btn-danger",true);
      if (responseObject.errorCode !== 0) {
        console.log("onConnectionLost:"+responseObject.errorMessage);
      }
    }

    // called when a message arrives
    function onMessageArrived(message) {

      let topic = message.destinationName;
      let payload = message.payloadString;
      if(topic.includes("/status")){
        let button = document.querySelector('#status');
        button.classList.toggle("btn-secondary",false);
        if(payload == "online")
          button.classList.toggle("btn-success",true);
        else
          button.classList.toggle("btn-danger",true);
      }

      if(topic.includes("uptime")){
        let uptime = document.querySelector('#uptime');
        uptime.value = payload;
      }

      if(topic.includes("tech")){
        let tech = document.querySelector('#tech');
        tech.value = payload;
      }

      if(topic.includes("rssi")){
        let rssi = document.querySelector('#rssi');
        rssi.value = payload;
      }

      if(topic.endsWith("wifi")){
        try{
          payload = JSON.parse(payload)
          document.querySelector('#wifissid').value = payload.ssid;
          document.querySelector('#wifipassword').value = payload.pwd;
        }catch(e){ console.log(e)}
        $(document).trigger("closeModalLoading"); // get confirmation
      }

      if(topic.endsWith("modem")){
        try{
          payload = JSON.parse(payload)
          document.querySelector('#_lte_apn_').value = payload.apn;
          document.querySelector('#_lte_user_').value = payload.user;
          document.querySelector('#_lte_pwd_').value = payload.pwd;
          document.querySelector('#_lte_cops_').value = payload.cops;
          document.querySelector('#_lte_band_').value = payload.band;
          document.querySelector('#_lte_tech_').value = payload.tech;
        }catch(e){ console.log(e)}
        $(document).trigger("closeModalLoading"); // get confirmation
      }

      if(topic.endsWith("mqtt")){
        try{
          payload = JSON.parse(payload)
          document.querySelector('#mqtt_host').value = payload.host;
          document.querySelector('#mqtt_port').value = payload.port;
          document.querySelector('#mqtt_user').value = payload.user;
          document.querySelector('#mqtt_pwd').value = payload.pass;
        }catch(e){ console.log(e);}
        $(document).trigger("closeModalLoading"); // get confirmation
      }

      if(topic.endsWith("keepalive")){
        try{
          payload = JSON.parse(payload)

          var select = document.getElementById("_fwkeepalive_");
          select.value = payload.period;

        }catch(e){ console.log(e);}
        $(document).trigger("closeModalLoading"); // set confirmation
      }

      if(topic.endsWith("log")){
        try{
          payload = JSON.parse(payload)

          var select = document.getElementById("_fwlogslevel_");
          select.value = payload.level;

        }catch(e){ console.log(e);}
        $(document).trigger("closeModalLoading"); // set confirmation
      }

      if(topic.endsWith("set")){
        if(payload == "" || payload == null || payload === 'undefined'){
          $(document).trigger("closeModalLoading"); // set confirmation
        }
      }
    }

    function sendMessage(topic,payload){
      message = new Paho.MQTT.Message(payload);
      message.destinationName = project+"/"+uid+"/"+topic;

      loading.modal('show');
      setTimeout(()=>{
        client.send(message);
      },500)

      var timeoutId = setTimeout(()=>{
        loading.modal('hide'); // set confirmation
        $('#modalTimeout').modal('show');
      },15000);

      $(document).on("closeModalLoading", function() {
        loading.modal('hide'); // set confirmation
        clearTimeout(timeoutId);
      });
    }

    function addSelectedOption(id,release){

      $(id).append(`<option select value="${release}">${release}</option>`);
    }

    function addOption(id,release){

      $(id).append(`<option value="${release}">
                                 ${release}
                            </option>`);
    }

    function addSelectedOption2(id,value,description){

      $(id).append(`<option select value="${value}">${description}</option>`);
    }

    function addOption2(id,value,description){

      $(id).append(`<option value="${value}">
                                 ${description}
                            </option>`);
    }

    // On mqtt connect, topic subscribe, change status device
  </script>
</body>
</html>
